# Name for the workflow
name: Deploy Jekyll site to Pages

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the main branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions for the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      # 1. Checks out your repository's code so the job can access it
      - name: Checkout
        uses: actions/checkout@v4
      
      # 2. This is the official action that sets up GitHub Pages and Jekyll
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      # 3. This action builds your Jekyll site. It will use your _config.yml file.
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
          
      # 4. This action uploads the built site as an artifact for the deploy job to use
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    # This job needs the 'build' job to succeed first
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      # 5. This is the official action that deploys the artifact to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4